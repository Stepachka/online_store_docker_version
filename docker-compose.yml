services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: online-shop-postgres
    environment:
      POSTGRES_DB: online-shop_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/prisma/migrations:/docker-entrypoint-initdb.d/migrations
    networks:
      - online-shop-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  # NestJS Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: online-shop-server
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/online-shop_db
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - online-shop-network
    volumes:
      - ./server/prisma:/app/prisma
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        node dist/src/main.js
      "

  # React Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: online-shop-client
    ports:
      - "8000:80"
    depends_on:
      - server
    networks:
      - online-shop-network
    environment:
      - REACT_APP_API_URL=http://90.156.227.180:3000


volumes:
  postgres_data:


networks:
  online-shop-network:
    driver: bridge

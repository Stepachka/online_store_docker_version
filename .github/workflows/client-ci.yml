name: React Client CI

on:
  push:
    branches: [main, develop]
    paths:
      - "client/**"
      - ".github/workflows/client-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "client/**"

jobs:
  build:
    name: Build Client
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "client/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/build/
          retention-days: 1

  test:
    name: Test Client
    runs-on: ubuntu-latest
    needs: build # Зависит от успешного билда

    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "client/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --watchAll=false --coverage --passWithNoTests

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: client-coverage
          path: client/coverage/
          retention-days: 1

  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build, test] # Зависит от успешного билда и тестов
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push client image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-client:latest
          
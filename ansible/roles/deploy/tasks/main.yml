- name: Create app directory (Not strictly needed for K8s but harmless)
  file:
    path: /app
    state: directory
    mode: "0755"

- name: Copy K8s manifests (test)
  copy:
  # ИСПРАВЛЕННЫЙ ПУТЬ: /home/runner/work/.../online_store_docker_version/k8s/
  # 'ansible_playbook_dir' указывает на /.../ansible/. Нам нужно подняться на один уровень выше.
  src: ../../../../k8s/"
  dest: /app/k8s/
  mode: "0755"

- name: Login to Docker Hub
  shell: |
    echo "{{ dockerhub_token }}" | docker login -u "{{ dockerhub_username }}" --password-stdin

- name: Install k3s
  shell: |
    curl -sfL https://get.k3s.io | sh -
  args:
    # Убедимся, что k3s устанавливается только один раз.
    creates: /usr/local/bin/k3s

# --- ШАГИ ДЛЯ KUBERNETES ---
# Используем полный путь к k3s kubectl (/usr/local/bin/k3s) или просто kubectl,
# если он находится в PATH после установки k3s. В k3s лучше использовать k3s kubectl.

- name: Wait for k3s to be ready (Give k3s time to start)
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token
    timeout: 180

- name: Deploy PostgreSQL and PVC
  # В k3s обычно используют k3s kubectl.
  shell: /usr/local/bin/k3s kubectl apply -f /app/k8s/postgres.yml

- name: Deploy Server Deployment and Service
  shell: /usr/local/bin/k3s kubectl apply -f /app/k8s/server.yml

- name: Deploy Client Deployment and Service
  shell: /usr/local/bin/k3s kubectl apply -f /app/k8s/client.yml

- name: Deploy HPA and Grafana Service
  shell: |
    /usr/local/bin/k3s kubectl apply -f /app/k8s/hpa.yml
    /usr/local/bin/k3s kubectl apply -f /app/k8s/grafana-service-nodeport.yml

- name: Wait for server deployment rollout
  shell: /usr/local/bin/k3s kubectl rollout status deployment/server-deployment --timeout=300s
  register: server_rollout_status
  failed_when: server_rollout_status.rc != 0

- name: Wait for client deployment rollout
  shell: /usr/local/bin/k3s kubectl rollout status deployment/client-deployment --timeout=300s
  register: client_rollout_status
  failed_when: client_rollout_status.rc != 0

- name: Show deployment status
  debug:
    msg: "K8s Deployment complete. Check pods with: /usr/local/bin/k3s kubectl get pods"

- name: Check K8s services status
  shell: /usr/local/bin/k3s kubectl get svc
  register: service_status

- name: Show K8s services
  debug:
    msg: "{{ service_status.stdout }}"

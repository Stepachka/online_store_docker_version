- name: Create app directory (Not strictly needed for K8s but harmless)
  # Удален комментарий с двоеточием внутри name
  file:
    path: /app
    state: directory
    mode: "0755"

- name: Copy K8s manifests
  # Удален комментарий с двоеточием внутри name
  copy:
    # Используем абсолютный путь, чтобы быть уверенным в расположении
    src: "{{ playbook_dir }}/../../k8s/"
    dest: /app/k8s/
    mode: "0755"

- name: Login to Docker Hub
  shell: |
    echo "{{ dockerhub_token }}" | docker login -u "{{ dockerhub_username }}" --password-stdin

# --- ШАГИ ДЛЯ KUBERNETES ---
- name: Deploy PostgreSQL and PVC
  shell: /usr/local/bin/k3s kubectl apply -f /app/k8s/postgres.yml
  # Используем полный путь к k3s kubectl, чтобы избежать проблем с PATH

- name: Deploy Server Deployment and Service
  shell: /usr/local/bin/k3s kubectl apply -f /app/k8s/server.yml

- name: Deploy Client Deployment and Service
  shell: /usr/local/bin/k3s kubectl apply -f /app/k8s/client.yml

- name: Deploy HPA and Grafana Service
  shell: |
    /usr/local/bin/k3s kubectl apply -f /app/k8s/hpa.yml
    /usr/local/bin/k3s kubectl apply -f /app/k8s/grafana-service-nodeport.yml

- name: Wait for server deployment rollout
  shell: /usr/local/bin/k3s kubectl rollout status deployment/server-deployment --timeout=300s
  register: server_rollout_status
  failed_when: server_rollout_status.rc != 0

- name: Wait for client deployment rollout
  shell: /usr/local/bin/k3s kubectl rollout status deployment/client-deployment --timeout=300s
  register: client_rollout_status
  failed_when: client_rollout_status.rc != 0

- name: Show deployment status
  debug:
    msg: "K8s Deployment complete. Check pods with: /usr/local/bin/k3s kubectl get pods"

- name: Check K8s services status
  shell: /usr/local/bin/k3s kubectl get svc
  register: service_status

- name: Show K8s services
  debug:
    msg: "{{ service_status.stdout }}"
